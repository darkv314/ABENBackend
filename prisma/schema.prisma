// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator erd {
  provider                  = "prisma-erd-generator"
  includeRelationFromFields = true
  theme                     = "dark"
  output                    = "./ERD.png"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rol {
  id       Int       @id @default(autoincrement())
  nombre   String    @unique
  usuarios Usuario[]
}

model Usuario {
  id        Int        @id @default(autoincrement())
  nit       String     @unique
  nombre    String     @unique
  password  String
  telefono  String     @unique
  email     String     @unique
  rol       Rol        @relation(fields: [rolId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  rolId     Int
  estados   Estado[]
  servicios Servicio[]
}

model Estado {
  id         Int       @id @default(autoincrement())
  nombre     String    @default("iniciado")
  empleado   Usuario   @relation(fields: [empleadoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  empleadoId Int
  servicio   Servicio? @relation(fields: [servicioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicioId Int       @unique
}

model Servicio {
  id          Int          @id @default(autoincrement())
  nombre      String
  inicio      DateTime     @default(now())
  fin         DateTime?
  estado      Estado?
  direccion   String?
  envio       DateTime?
  recojo      DateTime?
  cantidad    Int
  analisis    Analisis?
  calibracion Calibracion?
  dosimetria  Dosimetria?
  documentos  Documento[]
  usuario     Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
}

model Documento {
  id     Int    @id @default(autoincrement())
  nombre String
  link   String @unique

  servicio   Servicio @relation(fields: [servicioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicioId Int
}

model Muestra {
  id         Int      @id @default(autoincrement())
  analisis   Analisis @relation(fields: [analisisId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  analisisId Int      @unique
  cantidad   Int
  pais       String
  empresa    String
  almacenado String
  material   String
}

model Analisis {
  id         Int       @id @default(autoincrement())
  servicio   Servicio  @relation(fields: [servicioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicioId Int       @unique
  muestras   Muestra[]
}

model Equipo {
  id            Int         @id @default(autoincrement())
  nombre        String
  fabricante    String
  modelo        String
  serie         String
  calibracion   Calibracion @relation(fields: [calibracionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  calibracionId Int
}

model Calibracion {
  id         Int      @id @default(autoincrement())
  servicio   Servicio @relation(fields: [servicioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicioId Int      @unique
  equipos    Equipo[]
}

model Empleado {
  id           Int        @id @default(autoincrement())
  nombre       String
  ci           String
  expedido     String
  cargo        String
  dosimetria   Dosimetria @relation(fields: [dosimetriaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  dosimetriaId Int
}

model Dosimetria {
  id         Int        @id @default(autoincrement())
  servicio   Servicio   @relation(fields: [servicioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicioId Int        @unique
  actividad  String
  empleados  Empleado[]
}
