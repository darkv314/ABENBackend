# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Estado {
  id: Int!

  """
  Nombre del estado, indica en que parte del proceso se encuentra un servicio
  """
  nombre: String!
}

type Muestra {
  id: Int!
  tipo: String!
  procedencia: String!
  identificacion: String!
  coordenadas: String
}

type Analisis {
  id: Int!
  muestras: [Muestra!]
}

type Equipo {
  id: Int!
  nombre: String!
  fabricante: String!
  modelo: String!
  serie: String!
}

type Calibracion {
  id: Int!
  equipos: [Equipo!]
}

type Documento {
  id: Int!
  nombre: String!
  link: String!
}

type Empleado {
  id: Int!
  nombre: String!
  ci: String!
  expedido: String!
  cargo: String!
}

type InfoCourrier {
  id: Int!
  responsable: String!
  telefono: String!
  direccion: String!
}

type Dosimetria {
  id: Int!
  actividad: String!
  lecturas: Int!
  infoCourrier: InfoCourrier
  empleados: [Empleado!]
}

type Servicio {
  id: Int!
  nombre: String!
  empresa: String!
  inicio: Timestamp
  fin: Timestamp
  cantidad: Int!

  """Estado del servicio"""
  estado: Estado
  nit: String!
  telefono: String!
  email: String!
  analisis: Analisis
  calibraciones: Calibracion
  dosimetrias: Dosimetria
  documentos: [Documento!]
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Usuario {
  id: Int!

  """Nombre de la empresa cliente"""
  nombre: String!
  telefono: String
  email: String!

  """Estados en los que esta trabajando un usuario de tipo laboratorio"""
  estados: [Estado!]!

  """Servicios contratados por los usuarios de tipo cliente"""
  servicios: [Servicio!]!
}

type Rol {
  id: Int!

  """Nombre del rol"""
  nombre: String!

  """Usuarios de un rol"""
  usuarios: [Usuario!]!
}

type UserRol {
  id: Int!

  """Nombre del rol"""
  nombre: String!
}

type UsuarioAuth {
  access_token: String!
  nombre: String!
  id: Int!
  rol: UserRol!
  email: String!
  nit: String!
  telefono: String!
}

input EstadoInput {
  id: Int!

  """
  Nombre del estado, indica en que parte del proceso se encuentra un servicio
  """
  nombre: String!
}

input DocumentoInput {
  id: Int!
  nombre: String!
  link: String!
}

type Query {
  usuario(id: Int!): Usuario
  usuarios: [Usuario!]
  servicios(usuarioId: Int!): [Servicio!]
  rol(id: Int!): Rol
  roles: [Rol!]
}

type Mutation {
  createUsuario(usuario: CrearUsuarioInput!): Usuario!
  crearServicios(servicios: [ServicioInput!]!): [Servicio!]!
  createRol(nombre: String!): Rol!
  updateRol(id: Float!): Rol!
  login(inputLogin: UsuarioInputLogin!): UsuarioAuth!
  signup(cliente: CrearClienteInput!): UsuarioAuth!
}

input CrearUsuarioInput {
  nombre: String!
  password: String!
  email: String!
  nit: String!
  telefono: String!
  rolId: Int!
}

input ServicioInput {
  nombre: String!
  empresa: String!
  cantidad: Int!
  nit: String!
  telefono: String!
  email: String!
  analisis: AnalisisInput
  calibracion: CalibracionInput
  dosimetria: DosimetriaInput
  usuarioId: Int!
}

input AnalisisInput {
  muestras: [MuestraInput!]
}

input MuestraInput {
  tipo: String!
  procedencia: String!
  identificacion: String!
  coordenadas: String
}

input CalibracionInput {
  equipos: [EquipoInput!]
}

input EquipoInput {
  nombre: String!
  fabricante: String!
  modelo: String!
  serie: String!
}

input DosimetriaInput {
  actividad: String!
  infoCourrier: InfoCourrierInput
  lecturas: Int!
  empleados: [EmpleadoInput!]
}

input InfoCourrierInput {
  responsable: String!
  telefono: String!
  direccion: String!
}

input EmpleadoInput {
  nombre: String!
  ci: String!
  expedido: String!
  cargo: String!
}

input UsuarioInputLogin {
  email: String!
  password: String!
}

input CrearClienteInput {
  nombre: String!
  password: String!
  email: String!
  nit: String!
  telefono: String!
}